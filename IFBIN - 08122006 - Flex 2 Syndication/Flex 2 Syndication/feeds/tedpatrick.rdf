<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns="http://purl.org/rss/1.0/" xmlns:admin="http://webns.net/mvcb/" xmlns:l="http://purl.org/rss/1.0/modules/link/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <!--Generated by Blogger v5.0-->
  <channel rdf:about="http://www.onflex.org/ted/">
    <title>Ted On Flex</title>
    <link>http://www.onflex.org/ted/</link>
    <description>Distributed Application Development in Flex, Flash, and Apollo.</description>
    <dc:date>2006-08-10T16:25:54Z</dc:date>
    <dc:language>en-US</dc:language>
    <admin:generatorAgent rdf:resource="http://www.blogger.com/" />
    <admin:errorReportsTo rdf:resource="mailto:rss-errors@blogger.com" />
    <items>
      <rdf:Seq>
        <rdf:li rdf:resource="http://www.onflex.org/ted/2006/08/fxt-flex-templating.php" />
        <rdf:li rdf:resource="http://www.onflex.org/ted/2006/08/skinning-and-theme-support-by-glenn.php" />
        <rdf:li rdf:resource="http://www.onflex.org/ted/2006/07/learning-flex-through-just-mxml-and.php" />
        <rdf:li rdf:resource="http://www.onflex.org/ted/2006/07/flex-2-preloaders-swf-png-gif-examples.php" />
        <rdf:li rdf:resource="http://www.onflex.org/ted/2006/07/flex-2-custom-preloaders.php" />
      </rdf:Seq>
    </items>
  </channel>
  <item rdf:about="http://www.onflex.org/ted/2006/08/fxt-flex-templating.php">
    <title>FXT - Flex Templating</title>
    <link>http://www.onflex.org/ted/2006/08/fxt-flex-templating.php</link>
    <description>Flex Templating provides rich client side website templating using MVC (Model-View-Controller). FXT solves a host of problems for using Flex and Flash Player for website development.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;Yahoo View on Yahoo Web Search Model using FXT&lt;/span&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/search/"&gt;Home Template View&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/search/Adobe/Flex"&gt;Results Template View&lt;/a&gt;&lt;br /&gt;Both of these pages use the same SWF template but use a different model within the HTML source.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;Flex View on Yahoo Web Search Model using FXT&lt;/span&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/Flexsearch/"&gt;Home Template View&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/Flexsearch/Adobe/Flex"&gt;Results Template View&lt;/a&gt;&lt;br /&gt;Both of these pages use the same SWF template but use a different model within the HTML source.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;FXT Component Use Examples&lt;/span&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/Basic/"&gt;Basic Template Model&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/List/"&gt;List Example&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/DataGrid/"&gt;DataGrid Example&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/Examples.zip"&gt;Download FXT Version 1.0 Source&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;Model == XML Island embedded in HTML&lt;br /&gt;View-Controller == Flex 2 SWF&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This is an implementation of client side templating using Flex. It is a very compatible and productive way to make data driven websites very quickly. The custom Yahoo Web Search mashup took less than an hour to create and the entire UI can be reskinned by changing a single SWF file. &lt;br /&gt;&lt;br /&gt;The key point is that the Model within the HTML page drives the View of a Flex application. It allows Flex to compete in a page centric world and expands the reach of the Flex marketplace. In a typical HTML based application, data (Model) and tags (View) are merged and intertwined. With FXT, the data (Model) is separate from the templated Flex code (View) until both arrive on the end users machine. Both pieces need not arrive or update at the same time, creating a more real-time feel than most HTML applications have. This is because the data (Model) remains structured all the way to the client side where it is templated at runtime rather than being merged at the server. Using E4X, you can utilize components, data binding, and async loading to create truly immersive rich web applications. Reskinning in this paradigm is simple.  If the developer changes the SWF template on the server, the entire UI will change instantly. This simplifies development and deployment of larger scale sites and allows for small teams to edit sites in an extensible and productive manner.&lt;br /&gt;&lt;br /&gt;The solution is also 100% SEO compatible as the Model of a page is within the HTML of the application. Better still, the data can be easily parsed with any xml parser by web crawlers or other Mashup applications. &lt;br /&gt;&lt;br /&gt;&lt;a href="http://code.google.com/p/fxt/"&gt;FXT Project Page&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/"&gt;FXT Blog&lt;/a&gt;&lt;br /&gt;&lt;a href="http://code.google.com/p/fxt/issues/list"&gt;FXT Bug Tracking&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/FXT/Examples.zip"&gt;Download FXT Version 1.0 Source&lt;/a&gt;&lt;br /&gt;&lt;a href="http://code.google.com/p/fxt/source"&gt;FXT SVN Repository&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;svn checkout http://fxt.googlecode.com/svn/trunk/ fxt&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;Benefits:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Model Driven - The data (Model) is in HTML as XML. It is browser and search engine compatible.&lt;br /&gt; &lt;br /&gt;Restful URLS - The urls are simple, bookmarkable, and back button supported. &lt;br /&gt;&lt;br /&gt;Classic MVC - Model is XML embedded in HTML, View and Controller are Flex-generated SWFs. &lt;br /&gt;&lt;br /&gt;E4X is used to render data within the template SWF file. &lt;br /&gt;&lt;br /&gt;Flex States are supported. &lt;br /&gt;&lt;br /&gt;Rapid - Just open a project, edit the XML model, and edit the Flex template to create an interactive site. Layout is component based and easy with E4X. &lt;br /&gt;&lt;br /&gt;Fast - Once the SWF file is cached, each page load time is 100% data loading and Flex instantiation.&lt;br /&gt;&lt;br /&gt;Enjoy FXT!&lt;br /&gt;&lt;br /&gt;Ted Patrick&lt;br /&gt;Flex Evangelist&lt;br /&gt;Adobe Systems</description>
    <dc:creator>Ted Patrick</dc:creator>
    <dc:date>2006-08-10T16:15:00Z</dc:date>
    <content:encoded><![CDATA[Flex Templating provides rich client side website templating using MVC (Model-View-Controller). FXT solves a host of problems for using Flex and Flash Player for website development.<br /><br /><span style="font-weight:bold;">Yahoo View on Yahoo Web Search Model using FXT</span><br /><a href="http://www.onflex.org/FXT/search/">Home Template View</a><br /><a href="http://www.onflex.org/FXT/search/Adobe/Flex">Results Template View</a><br />Both of these pages use the same SWF template but use a different model within the HTML source.<br /><br /><span style="font-weight:bold;">Flex View on Yahoo Web Search Model using FXT</span><br /><a href="http://www.onflex.org/FXT/Flexsearch/">Home Template View</a><br /><a href="http://www.onflex.org/FXT/Flexsearch/Adobe/Flex">Results Template View</a><br />Both of these pages use the same SWF template but use a different model within the HTML source.<br /><br /><span style="font-weight:bold;">FXT Component Use Examples</span><br /><a href="http://www.onflex.org/FXT/Basic/">Basic Template Model</a><br /><a href="http://www.onflex.org/FXT/List/">List Example</a><br /><a href="http://www.onflex.org/FXT/DataGrid/">DataGrid Example</a><br /><br /><a href="http://www.onflex.org/FXT/Examples.zip">Download FXT Version 1.0 Source</a><br /><br /><span style="font-weight:bold;">Model == XML Island embedded in HTML<br />View-Controller == Flex 2 SWF</span><br /><br />This is an implementation of client side templating using Flex. It is a very compatible and productive way to make data driven websites very quickly. The custom Yahoo Web Search mashup took less than an hour to create and the entire UI can be reskinned by changing a single SWF file. <br /><br />The key point is that the Model within the HTML page drives the View of a Flex application. It allows Flex to compete in a page centric world and expands the reach of the Flex marketplace. In a typical HTML based application, data (Model) and tags (View) are merged and intertwined. With FXT, the data (Model) is separate from the templated Flex code (View) until both arrive on the end users machine. Both pieces need not arrive or update at the same time, creating a more real-time feel than most HTML applications have. This is because the data (Model) remains structured all the way to the client side where it is templated at runtime rather than being merged at the server. Using E4X, you can utilize components, data binding, and async loading to create truly immersive rich web applications. Reskinning in this paradigm is simple.  If the developer changes the SWF template on the server, the entire UI will change instantly. This simplifies development and deployment of larger scale sites and allows for small teams to edit sites in an extensible and productive manner.<br /><br />The solution is also 100% SEO compatible as the Model of a page is within the HTML of the application. Better still, the data can be easily parsed with any xml parser by web crawlers or other Mashup applications. <br /><br /><a href="http://code.google.com/p/fxt/">FXT Project Page</a><br /><a href="http://www.onflex.org/FXT/">FXT Blog</a><br /><a href="http://code.google.com/p/fxt/issues/list">FXT Bug Tracking</a><br /><a href="http://www.onflex.org/FXT/Examples.zip">Download FXT Version 1.0 Source</a><br /><a href="http://code.google.com/p/fxt/source">FXT SVN Repository</a><br /><br /><span style="font-weight:bold;">svn checkout http://fxt.googlecode.com/svn/trunk/ fxt</span> <br /><br /><span style="font-weight:bold;">Benefits:</span><br /><br />Model Driven - The data (Model) is in HTML as XML. It is browser and search engine compatible.<br /> <br />Restful URLS - The urls are simple, bookmarkable, and back button supported. <br /><br />Classic MVC - Model is XML embedded in HTML, View and Controller are Flex-generated SWFs. <br /><br />E4X is used to render data within the template SWF file. <br /><br />Flex States are supported. <br /><br />Rapid - Just open a project, edit the XML model, and edit the Flex template to create an interactive site. Layout is component based and easy with E4X. <br /><br />Fast - Once the SWF file is cached, each page load time is 100% data loading and Flex instantiation.<br /><br />Enjoy FXT!<br /><br />Ted Patrick<br />Flex Evangelist<br />Adobe Systems]]></content:encoded>
    <l:permalink l:type="text/html" rdf:resource="http://www.onflex.org/ted/2006/08/fxt-flex-templating.php" />
  </item>
  <item rdf:about="http://www.onflex.org/ted/2006/08/skinning-and-theme-support-by-glenn.php">
    <title>Skinning and Theme Support by Glenn Ruehle</title>
    <link>http://www.onflex.org/ted/2006/08/skinning-and-theme-support-by-glenn.php</link>
    <description>If you want to know the details of skinning and theme support in Flex 2 there is no better guide than Glenn Ruehle. Here are Glenn's slides from his technical session on Skinning and Theme support at the Adobe Component Developers Summit. &lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.flex.org/ACDS/FlexSkinsAndThemes.pdf"&gt;Skinning and Theme Support by Glenn Ruehle&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;&lt;br /&gt;Ted :)</description>
    <dc:creator>Ted Patrick</dc:creator>
    <dc:date>2006-08-08T20:43:31Z</dc:date>
    <content:encoded><![CDATA[If you want to know the details of skinning and theme support in Flex 2 there is no better guide than Glenn Ruehle. Here are Glenn's slides from his technical session on Skinning and Theme support at the Adobe Component Developers Summit. <br /><br /><a href="http://www.flex.org/ACDS/FlexSkinsAndThemes.pdf">Skinning and Theme Support by Glenn Ruehle</a><br /><br />Cheers,<br /><br />Ted :)]]></content:encoded>
    <l:permalink l:type="text/html" rdf:resource="http://www.onflex.org/ted/2006/08/skinning-and-theme-support-by-glenn.php" />
  </item>
  <item rdf:about="http://www.onflex.org/ted/2006/07/learning-flex-through-just-mxml-and.php">
    <title>Learning Flex through 'Just MXML and AS3'</title>
    <link>http://www.onflex.org/ted/2006/07/learning-flex-through-just-mxml-and.php</link>
    <description>On Monday, I received 2 email requests within 30 minutes requesting MXML/AS3 examples. I made an example, added a subject, and pasted the MXML/AS3 into the body. It struck me as a simple way to learn Flex, so I created '&lt;a href="http://www.onflex.org/code/"&gt;Just MXML and AS3&lt;/a&gt;'.&lt;br /&gt;&lt;br /&gt;The goal is for the community to post working MXML and AS3 examples to explore working Flex applications. Just paste the code into Flex Builder 2, Flex SDK, Flex Data Services, and it will compile a working example. You can then explore the working code and discover how Flex really works from the inside out. &lt;br /&gt;&lt;br /&gt;I learn by doing, seeing, exploring, and understanding. Books are great, but there is no substitute for compiling code, seeing it work, and understanding it. It allows you to see patterns, discover new techniques, and explore another developer's perspective. I have learned more from tinkering with source code than I ever have from a manual or textbook. Real understanding or innovation rarely comes from reading   a manual, it occurs when you explore the known to discover the unknown and unwritten. &lt;br /&gt;&lt;span style="font-weight:bold;"&gt;&lt;br /&gt;What would the modern world be like if the Wright Brothers had not tinkered with bikes, kites, and propellers? Real innovation and knowledge comes from exploration.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;&lt;br /&gt;So what is '&lt;a href="http://www.onflex.org/code/"&gt;Just MXML and AS3&lt;/a&gt;' about?&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;OPEN&lt;/span&gt; - Anyone can post code to 'Just MXML and AS3' but all code is approved for publishing. &lt;a href="http://www.onflex.org/code/form/"&gt;Post example MXML and AS3 here.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;DEVELOPER CREDIT&lt;/span&gt; - The name of the developer will be in the post title. "by YOUR NAME HERE" will be in every post.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;TEXT POWERED&lt;/span&gt; - With '&lt;a href="http://www.onflex.org/code/"&gt;Just MXML and AS3&lt;/a&gt;' you can compile an application in less that 1 minute and see code working on your machine. With text, sharing code is as simple as cut and paste.&lt;br /&gt;&lt;br /&gt;I look forward to seeing what you contribute to '&lt;a href="http://www.onflex.org/code/"&gt;Just MXML and AS3&lt;/a&gt;' and I want to encourage everyone to post code often. There is so much to learn in AS3 and MXML that we could post 1000's of examples and still not cover every feature.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/code/form/"&gt;Post code, Get credit, Have fun!&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;&lt;br /&gt;Ted :)</description>
    <dc:creator>Ted Patrick</dc:creator>
    <dc:date>2006-07-29T19:11:00Z</dc:date>
    <content:encoded><![CDATA[On Monday, I received 2 email requests within 30 minutes requesting MXML/AS3 examples. I made an example, added a subject, and pasted the MXML/AS3 into the body. It struck me as a simple way to learn Flex, so I created '<a href="http://www.onflex.org/code/">Just MXML and AS3</a>'.<br /><br />The goal is for the community to post working MXML and AS3 examples to explore working Flex applications. Just paste the code into Flex Builder 2, Flex SDK, Flex Data Services, and it will compile a working example. You can then explore the working code and discover how Flex really works from the inside out. <br /><br />I learn by doing, seeing, exploring, and understanding. Books are great, but there is no substitute for compiling code, seeing it work, and understanding it. It allows you to see patterns, discover new techniques, and explore another developer's perspective. I have learned more from tinkering with source code than I ever have from a manual or textbook. Real understanding or innovation rarely comes from reading   a manual, it occurs when you explore the known to discover the unknown and unwritten. <br /><span style="font-weight:bold;"><br />What would the modern world be like if the Wright Brothers had not tinkered with bikes, kites, and propellers? Real innovation and knowledge comes from exploration.</span><br /><span style="font-weight:bold;"><br />So what is '<a href="http://www.onflex.org/code/">Just MXML and AS3</a>' about?</span><br /><br /><span style="font-weight:bold;">OPEN</span> - Anyone can post code to 'Just MXML and AS3' but all code is approved for publishing. <a href="http://www.onflex.org/code/form/">Post example MXML and AS3 here.</a><br /><br /><span style="font-weight:bold;">DEVELOPER CREDIT</span> - The name of the developer will be in the post title. "by YOUR NAME HERE" will be in every post.<br /><br /><span style="font-weight:bold;">TEXT POWERED</span> - With '<a href="http://www.onflex.org/code/">Just MXML and AS3</a>' you can compile an application in less that 1 minute and see code working on your machine. With text, sharing code is as simple as cut and paste.<br /><br />I look forward to seeing what you contribute to '<a href="http://www.onflex.org/code/">Just MXML and AS3</a>' and I want to encourage everyone to post code often. There is so much to learn in AS3 and MXML that we could post 1000's of examples and still not cover every feature.<br /><br /><a href="http://www.onflex.org/code/form/">Post code, Get credit, Have fun!</a><br /><br />Cheers,<br /><br />Ted :)]]></content:encoded>
    <l:permalink l:type="text/html" rdf:resource="http://www.onflex.org/ted/2006/07/learning-flex-through-just-mxml-and.php" />
  </item>
  <item rdf:about="http://www.onflex.org/ted/2006/07/flex-2-preloaders-swf-png-gif-examples.php">
    <title>Flex 2 Preloaders - SWF, PNG, GIF Examples</title>
    <link>http://www.onflex.org/ted/2006/07/flex-2-preloaders-swf-png-gif-examples.php</link>
    <description>Last friday I posted an example of custom preloaders for Flex 2 applications. Using the exact same code, I made 3 examples this morning that show the use of PNG, SWF, GIF within custom preloader classes. Also full source is available below...&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/SWF/"&gt;SWF Flex 2 Preloader&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/SWF/srcview/"&gt;SWF Flex 2 Preloader View Source&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/SWF/srcview/CustomPreloader.zip"&gt;SWF Flex 2 Preloader Source ZIP&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/GIF/"&gt;GIF Flex 2 Preloader&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/GIF/srcview/"&gt;GIF Flex 2 Preloader View Source&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/GIF/srcview/CustomPreloader.zip"&gt;GIF Flex 2 Preloader Source ZIP&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/PNG/"&gt;PNG Flex 2 Preloader&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/PNG/srcview/"&gt;PNG Flex 2 Preloader View Source&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/PNG/srcview/CustomPreloader.zip"&gt;PNG Flex 2 Preloader Source ZIP&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I will be posting a new release later this week that contains the progress notification for users of the preloader state. Users will be able to see:&lt;br /&gt;&lt;br /&gt;1. Loading progress of RSLs.&lt;br /&gt;2. Loading progress of base SWF.&lt;br /&gt;3. Initialization progress.&lt;br /&gt;&lt;br /&gt;More to come!&lt;br /&gt;&lt;br /&gt;Ted :)</description>
    <dc:creator>Ted Patrick</dc:creator>
    <dc:date>2006-07-24T17:22:00Z</dc:date>
    <content:encoded><![CDATA[Last friday I posted an example of custom preloaders for Flex 2 applications. Using the exact same code, I made 3 examples this morning that show the use of PNG, SWF, GIF within custom preloader classes. Also full source is available below...<br /><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/SWF/">SWF Flex 2 Preloader</a><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/SWF/srcview/">SWF Flex 2 Preloader View Source</a><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/SWF/srcview/CustomPreloader.zip">SWF Flex 2 Preloader Source ZIP</a><br /><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/GIF/">GIF Flex 2 Preloader</a><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/GIF/srcview/">GIF Flex 2 Preloader View Source</a><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/GIF/srcview/CustomPreloader.zip">GIF Flex 2 Preloader Source ZIP</a><br /><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/PNG/">PNG Flex 2 Preloader</a><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/PNG/srcview/">PNG Flex 2 Preloader View Source</a><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/PNG/srcview/CustomPreloader.zip">PNG Flex 2 Preloader Source ZIP</a><br /><br />I will be posting a new release later this week that contains the progress notification for users of the preloader state. Users will be able to see:<br /><br />1. Loading progress of RSLs.<br />2. Loading progress of base SWF.<br />3. Initialization progress.<br /><br />More to come!<br /><br />Ted :)]]></content:encoded>
    <l:permalink l:type="text/html" rdf:resource="http://www.onflex.org/ted/2006/07/flex-2-preloaders-swf-png-gif-examples.php" />
  </item>
  <item rdf:about="http://www.onflex.org/ted/2006/07/flex-2-custom-preloaders.php">
    <title>Flex 2 Custom Preloaders</title>
    <link>http://www.onflex.org/ted/2006/07/flex-2-custom-preloaders.php</link>
    <description>I have been working on a custom preloader component for Flex. The idea here is to make the preloader into a splash screen just like desktop applications. It conditions the user to think that this is not a web page and is an application. Here is the first public build.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/" target="_new"&gt;Flex 2 Custom Preloader Example&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/srcview/index.html" target="_new"&gt;Flex 2 Custom Preloader View Source&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.onflex.org/flexapps/components/CustomPreloader/srcview/CustomPreloader.zip" target="_new"&gt;Flex 2 Custom Preloader Source ZIP&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Next Build:&lt;br /&gt;&lt;br /&gt;- Add Download Progress&lt;br /&gt;- Add RSL Download Progress&lt;br /&gt;- Add Initialization Progress&lt;br /&gt;&lt;br /&gt;Features:&lt;br /&gt;&lt;br /&gt;- Preloader is available after application initializes.&lt;br /&gt;- Preloader is faded in and out.&lt;br /&gt;- Preloader supports GIF,JPG,PNG,SWF (Yes, Flash Preloaders are supported!)&lt;br /&gt;&lt;br /&gt;I am adding in download/initialization progress into the preloader next week. Currently there is no feedback to the end user that the app is loading or initializing, this will change in the next build. &lt;br /&gt;&lt;br /&gt;The important item here is that these preloaders can contain GIF, JPG, PNG (with transparency) and SWF files (Flash 2 or higher!). I made sure that it was easy to embed assets into the base movie for playback before the base Flex SWF has loaded. This makes building/customizing preloaders easy. Simply swap the file (welcome.gif) in the /preload directory and edit the Embed statement in the preload.WelcomeScreen.as Class and you are good to go. The goal here was to allow anyone to make a killer preloader for Flex 2.&lt;br /&gt;&lt;br /&gt;I will continue to add features to the preloader as needed until it hits 1.0. Getting the base design ready was not easy but now that the hard part is done, it looks to be smooth sailing.&lt;br /&gt;&lt;br /&gt;If you want a feature added please post a comment.&lt;br /&gt;&lt;br /&gt;cheers,&lt;br /&gt;&lt;br /&gt;Ted :)</description>
    <dc:creator>Ted Patrick</dc:creator>
    <dc:date>2006-07-21T21:16:00Z</dc:date>
    <content:encoded><![CDATA[I have been working on a custom preloader component for Flex. The idea here is to make the preloader into a splash screen just like desktop applications. It conditions the user to think that this is not a web page and is an application. Here is the first public build.<br /><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/" target="_new">Flex 2 Custom Preloader Example</a><br /><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/srcview/index.html" target="_new">Flex 2 Custom Preloader View Source</a><br /><br /><a href="http://www.onflex.org/flexapps/components/CustomPreloader/srcview/CustomPreloader.zip" target="_new">Flex 2 Custom Preloader Source ZIP</a><br /><br />Next Build:<br /><br />- Add Download Progress<br />- Add RSL Download Progress<br />- Add Initialization Progress<br /><br />Features:<br /><br />- Preloader is available after application initializes.<br />- Preloader is faded in and out.<br />- Preloader supports GIF,JPG,PNG,SWF (Yes, Flash Preloaders are supported!)<br /><br />I am adding in download/initialization progress into the preloader next week. Currently there is no feedback to the end user that the app is loading or initializing, this will change in the next build. <br /><br />The important item here is that these preloaders can contain GIF, JPG, PNG (with transparency) and SWF files (Flash 2 or higher!). I made sure that it was easy to embed assets into the base movie for playback before the base Flex SWF has loaded. This makes building/customizing preloaders easy. Simply swap the file (welcome.gif) in the /preload directory and edit the Embed statement in the preload.WelcomeScreen.as Class and you are good to go. The goal here was to allow anyone to make a killer preloader for Flex 2.<br /><br />I will continue to add features to the preloader as needed until it hits 1.0. Getting the base design ready was not easy but now that the hard part is done, it looks to be smooth sailing.<br /><br />If you want a feature added please post a comment.<br /><br />cheers,<br /><br />Ted :)]]></content:encoded>
    <l:permalink l:type="text/html" rdf:resource="http://www.onflex.org/ted/2006/07/flex-2-custom-preloaders.php" />
  </item>
</rdf:RDF>

